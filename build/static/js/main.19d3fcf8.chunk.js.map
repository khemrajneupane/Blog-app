{"version":3,"sources":["services/blogs.js","services/login.js","components/Blog.js","hooks/index.js","components/LoginForm.js","components/AddBlogsForm.js","components/LogOut.js","components/Togglable.js","components/UserBlogInfo.js","App.js","index.js"],"names":["a","async","axios","get","request","data","newObject","token","config","headers","Authorization","post","newToken","blogId","delete","blog","blogObj","likes","put","credentials","response","Blog","props","useState","itemObj","setItemObj","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","itemsTitleAuthor","blogs","map","item","isLogged","user","username","indexOf","key","title","className","data-testid","style","onClick","id","author","url","createEachItems","marginLeft","deleteList","position","undefined","href","blogService","alert","window","confirm","message","location","reload","addLikes","useField","type","value","setValue","onChange","event","target","reset","Button","text","LoginForm","onSubmit","usernameValue","passwordValue","e","preventDefault","password","htmlFor","Input","inputValue","handler","placeholder","AddBlogsForm","handleTitle","handleAuthor","handleUrl","handleLikes","marginTop","LogOut","localStorage","removeItem","Togglable","React","forwardRef","ref","useImperativeHandle","buttonLabel","children","label","displayName","UserBlogInfo","toUpperCase","App","setBlogs","setUser","setMessage","errorMessage","setErrorMessage","setUrl","setTitle","setAuthor","setLikes","setNullMessage","setTimeout","useEffect","then","initialBlogs","sort","b","loggedUserJSON","getItem","JSON","parse","loginService","setItem","stringify","r","filter","check","ifTrue","thisPerson","concat","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19d3fcf8.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\nlet token = null\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n    return token\n}\n\nconst getAll = async () => {\n    const request = await axios.get(baseUrl)\n    return request.data\n}\n\nconst create = async (newObject, token) => {\n    const config = {\n        headers: { Authorization: `bearer ${token}` }\n    }\n    const request = await axios.post(baseUrl, newObject, config)\n    return request\n}\n\nconst deleteList = (blogId, token) => {\n    const config = {\n        headers: { Authorization: `bearer ${token}` }\n    }\n    const request = axios.delete(`${baseUrl}/${blogId}`, config)\n    return request\n}\n\nconst updateLikes = async (blogId, blog) => {\n    const blogObj = { ...blog }\n    blogObj.likes++\n    const request = await axios.put(`${baseUrl}/${blogId}`, blogObj)\n    return request.data\n}\n\nexport default { getAll, create, setToken, deleteList, updateLikes }\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrl, credentials)\n    return response.data\n}\n\nexport default { login }\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport '../index.css'\nimport blogService from '../services/blogs'\n\nconst Blog = props => {\n    const [itemObj, setItemObj] = useState([])\n    const [visible, setVisible] = useState(false)\n\n    const hideWhenVisible = { display: visible ? 'none' : '' }\n    const showWhenVisible = { display: visible ? '' : 'none' }\n\n    const toggleVisibility = () => {\n        setVisible(!visible)\n    }\n\n    const addLikes = async blog => {\n        try {\n            const blogObj = { ...blog }\n            blogObj.likes++\n            await blogService.updateLikes(blogObj.id, blog)\n            setItemObj(blogObj)\n        } catch (error) {\n            alert()\n            let r = window.confirm(`${error.message}! Would you like to refresh?`)\n            if (r === true) {\n                window.location.reload()\n            } else {\n                return\n            }\n        }\n    }\n\n    const createEachItems = async item =>\n        await setItemObj({\n            title: item.title,\n            author: item.author,\n            url: item.url,\n            likes: item.likes,\n            user: item.user,\n            id: item.id\n        })\n\n    const itemsTitleAuthor = props.blogs.map(item => {\n        const isLogged = item.user.username.indexOf(props.user) > -1\n        return (\n            <div\n                key={item.title}\n                className=\"blogStyle form-row\"\n                data-testid=\"visible\"\n            >\n                <span\n                    style={hideWhenVisible}\n                    onClick={toggleVisibility}\n                    className=\"ptr\"\n                >\n                    {item.title}\n                </span>\n                <div\n                    key={item.id}\n                    onClick={() => createEachItems(item)}\n                    className=\"ptr form-group col-md-6\"\n                    data-testid=\"createItems\"\n                >\n                    {item.author}\n                    {isLogged ? (\n                        <button\n                            className=\"btn btn-danger\"\n                            style={{ marginLeft:'150px',display:'inline-block' }}\n                            onClick={() => props.deleteList(item, setItemObj)}\n                        >\n              remove\n                        </button>\n                    ) : (\n                        <button className=\"hide\"></button>\n                    )}\n                    <hr />\n                </div>\n            </div>\n        )\n    })\n\n    const eachItems = () =>\n        itemObj.title === undefined ? (\n            <div className=\"hide\" data-testid=\"invisible\"></div>\n        ) : (\n            <div className=\"card text-center\" data-testid=\"revisible\">\n                <div className=\"card-header\"\n\n                    style={showWhenVisible}\n                    onClick={toggleVisibility}\n\n                    data-testid=\"spanvisible\"\n                >\n                    {itemObj.title}\n                </div>\n                <div className=\"card-body\">\n\n                    <label>Follow:</label> <a href={itemObj.url}>{itemObj.url}</a>\n                </div>\n                {`${itemObj.likes} likes `}\n                <button className=\"card-text btn btn-primary\" onClick={() => addLikes(itemObj)}>like</button>\n                <small>{` added by ${itemObj.author}`}</small>\n            </div>\n\n        )\n\n    return (\n        <div>\n            <div style={{ position:'fixed',marginLeft:'-40%' }} data-testid=\"eachitems\">{eachItems()}</div>\n            <div >\n                {itemsTitleAuthor}\n            </div>\n        </div>\n    )\n}\n\nBlog.propTypes = {\n    blogs: PropTypes.array.isRequired,\n    deleteList: PropTypes.func.isRequired,\n    user: PropTypes.string.isRequired\n}\n\nexport default Blog\n","import { useState } from 'react'\n\nexport const useField = type => {\n    const [value, setValue] = useState('')\n\n    const onChange = event => {\n        setValue(event.target.value)\n    }\n\n    const reset = () => {\n        setValue('')\n    }\n\n    return {\n        type,\n        value,\n        onChange,\n        reset\n    }\n}","import React from 'react'\nimport { useField } from '../hooks/index'\n\nexport const Button = ({ type, text, onClick }) => (\n    <button className=\"btn btn-primary\" type={type} onClick={onClick}>\n        {text}\n    </button>\n)\n\nconst LoginForm = ({ onSubmit }) => {\n    const usernameValue = useField('username')\n    const passwordValue = useField('password')\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        onSubmit({\n            username: usernameValue.value,\n            password: passwordValue.value\n        })\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"username\">Username</label>\n                    <input className=\"form-control\" {...usernameValue} reset=\"\" />\n                    <br />\n                    <label htmlFor=\"password\">Password</label>\n                    <input className=\"form-control\" {...passwordValue} reset=\"\" />\n                    <br />\n                    <Button type=\"submit\" text=\"Login\" />\n                </div>\n            </form>\n        </div>\n    )\n}\nexport default LoginForm\n","import React from 'react'\nimport { Button } from '../components/LoginForm'\n\nexport const Input = ({ inputValue, handler, type, placeholder }) => (\n    <input\n        value={inputValue}\n        onChange={handler}\n        placeholder={placeholder}\n        type={type}\n    />\n)\n\nconst AddBlogsForm = ({\n    onSubmit,\n    handleTitle,\n    handleAuthor,\n    handleUrl,\n    handleLikes\n}) => {\n    return (\n        <div>\n            {\n                <form onSubmit={onSubmit}>\n                    <div className=\"form-group\">\n                        <Input\n                            className=\"form-control\"\n                            placeholder=\"title\"\n                            value=\"title\"\n                            handler={handleTitle}\n                        /> <br />\n\n                        <Input\n                            className=\"form-control\"\n                            placeholder=\"author\"\n                            value=\"author\"\n                            handler={handleAuthor}\n                        /><br />\n\n                        <Input\n                            className=\"form-control\"\n                            placeholder=\"url\"\n                            value=\"url\"\n                            type=\"url\"\n                            handler={handleUrl}\n                        /><br />\n\n                        <Input\n                            className=\"form-control\"\n                            placeholder=\"likes\"\n                            type=\"number\"\n                            value=\"likes\"\n                            handler={handleLikes}\n                        /><br />\n\n                        <Button style={{ marginTop:'5px' }}type=\"submit\" text=\"Create\" />\n                    </div>\n                </form>\n            }\n        </div>\n    )\n}\nexport default AddBlogsForm\n","import React from 'react'\nimport { Button } from '../components/LoginForm'\n\nconst logout = () =>\n    window.localStorage.removeItem('loggedUser')\n        ? window.location.reload(true)\n        : window.location.reload(false)\n\nconst LogOut = () => <Button onClick={() => logout()} text=\"logout\" />\n\nexport default LogOut\n","import React, { useState, useImperativeHandle } from 'react'\n\nconst Togglable = React.forwardRef((props, ref) => {\n    const [visible, setVisible] = useState(false)\n\n    const hideWhenVisible = { display: visible ? 'none' : '' }\n    const showWhenVisible = { display: visible ? '' : 'none' }\n\n    const toggleVisibility = () => {\n        setVisible(!visible)\n    }\n\n    useImperativeHandle(ref, () => {\n        return {\n            toggleVisibility\n        }\n    })\n\n    return (\n        <div className=\"form-row container\">\n            <div className=\"form-group col-md-6\" style={hideWhenVisible}>\n                <button className=\"btn btn-primary\" onClick={toggleVisibility}>\n                    {props.buttonLabel}\n                </button>\n            </div>\n            <div style={showWhenVisible}>\n                {props.children}\n                <button className=\"btn btn-primary\" onClick={toggleVisibility}>\n                    {props.label}\n                </button>\n            </div>\n        </div>\n    )\n})\nTogglable.displayName = 'Togglable'\nexport default Togglable\n","import Blog from './Blog'\nimport React from 'react'\nimport AddBlogsForm from './AddBlogsForm'\nimport LogOut from './LogOut'\nimport Togglable from './Togglable'\n\nconst UserBlogInfo = props => {\n    return (\n        <div  style={{ marginLeft:'40%' }}>\n            <div className=\"row\">\n                <p className=\"col-12\">\n                    {`${props.user.toUpperCase()} is logged in`} <LogOut />\n                </p>\n                <div className=\"col-12\">\n                    <div style={{ marginTop:'5px' }}>\n                        <Togglable buttonLabel=\"ShowAllBlogs\" label=\"HideAllBlogs\">\n                            {'All blogs '}\n                            <Blog\n                                blogs={props.blogs}\n                                deleteList={props.deleteList}\n                                user={props.user}\n                            />\n                        </Togglable>\n                    </div>\n                    <div style={{ marginTop:'5px' }}>\n                        <Togglable buttonLabel=\"AddNewBlog\" label=\"cancel\">\n                            <h6 className=\"form-row container\">Add Blogs</h6>\n                            <AddBlogsForm\n                                onSubmit={props.onSubmit}\n                                handleTitle={props.handleTitle}\n                                handleAuthor={props.handleAuthor}\n                                handleUrl={props.handleUrl}\n                                handleLikes={props.handleLikes}\n                            />\n                        </Togglable>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UserBlogInfo\n","import React, { useState, useEffect } from 'react'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nimport './index.css'\nimport UserBlogInfo from './components/UserBlogInfo'\nimport LoginForm from './components/LoginForm'\n\nconst App = () => {\n    const [blogs, setBlogs] = useState([])\n    const [user, setUser] = useState(null)\n    const [message, setMessage] = useState(null)\n    const [errorMessage, setErrorMessage] = useState(null)\n    const [url, setUrl] = useState('')\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n    const [likes, setLikes] = useState(0)\n\n    const setNullMessage = () => {\n        setTimeout(() => {\n            setMessage(null)\n            setErrorMessage(null)\n        }, 5000)\n    }\n\n    const Notification = ({ message, errorMessage }) => {\n        if (message === null || errorMessage !== null) {\n            return <div className=\"errorMessage\">{errorMessage}</div>\n        } else if (message !== null || errorMessage === null) {\n            return <div className=\"message\">{message}</div>\n        }\n    }\n\n    useEffect(() => {\n        blogService.getAll().then(initialBlogs => {\n            setBlogs(initialBlogs)\n        })\n    }, [blogs])\n    blogs.sort((a, b) => b.likes - a.likes)\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedUser')\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON)\n            setUser(user)\n            blogService.setToken(user.token)\n        }\n    }, [user])\n\n\n    const handleLogin = async credentials => {\n\n        try {\n            const user = await loginService.login(credentials)\n            window.localStorage.setItem('loggedUser', JSON.stringify(user))\n            blogService.setToken(user.token)\n            setUser(user)\n        } catch (e) {\n            setErrorMessage('Incorrect username or password')\n            setNullMessage()\n        }\n    }\n\n    const handleTitle = event => {\n        setTitle(event.target.value)\n    }\n    const handleAuthor = event => {\n        setAuthor(event.target.value)\n    }\n    const handleUrl = event => {\n        setUrl(event.target.value)\n    }\n    const handleLikes = event => {\n        setLikes(Number(event.target.value))\n    }\n\n    /**Adding a blog conditionally */\n    const addBlog = async event => {\n        event.preventDefault()\n\n        const newObject = {\n            title,\n            author,\n            url,\n            likes,\n            user\n        }\n\n        const check = blogs.map(a => a.author.indexOf(newObject.author))\n        const ifTrue = check.indexOf(0) > -1\n        if (!newObject.title || !newObject.author || !newObject.url) {\n            setErrorMessage('one or many fields missing!')\n            setNullMessage()\n            setBlogs(blogs)\n        } else if (ifTrue) {\n            const thisPerson = await blogs.filter(\n                blogs => !blogs.author.indexOf(newObject.author)\n            )[0]\n            setErrorMessage(\n                `${thisPerson.author} is already existing in the database`\n            )\n            setNullMessage()\n        } else {\n            try {\n                await blogService.create(newObject, user.token)\n                setBlogs(blogs.concat(newObject))\n                setMessage(`a new blog ${newObject.title} by ${newObject.author} added `)\n                setNullMessage()\n                setTitle('')\n                setAuthor('')\n                setUrl('')\n                setLikes('')\n            } catch (error) {\n                setErrorMessage(error.message)\n                setNullMessage()\n            }\n\n        }\n    }\n\n    /**Delete Function */\n    const deleteList = async (item, setItemObj) => {\n        const { id, author } = item\n        let r = window.confirm(`delete ${author} ?`)\n        if (r === true) {\n            try {\n                await blogService.deleteList(id, user.token)\n                setMessage(\n                    `Information of ${author} has been removed from the server.`\n                )\n                setNullMessage()\n                setItemObj({})\n            } catch (error) {\n                setBlogs(blogs)\n                setErrorMessage(\n                    `You have no permission to delete ${author} from the server.\n            Please refresh the page and try again!`\n                )\n                setNullMessage()\n            }\n\n            setBlogs(blogs.filter(blog => blog.id !== id))\n            setMessage(`${author}'s entry has been erased`)\n            setNullMessage()\n        } else if (r === false) {\n            setMessage(`You did not cancel ${author}'s entry`)\n            setNullMessage()\n            return\n        }\n    }\n\n\n    return (\n        <div className=\"flex\">\n            {message !== null || errorMessage !== null ? (\n                <Notification message={message} errorMessage={errorMessage} />\n            ) : null}\n\n            {user === null ? (<LoginForm onSubmit={handleLogin}/>) : (\n                <UserBlogInfo\n                    deleteList={deleteList}\n                    user={user.username}\n                    blogs={blogs}\n                    onSubmit={addBlog}\n                    handleTitle={handleTitle}\n                    handleAuthor={handleAuthor}\n                    handleUrl={handleUrl}\n                    handleLikes={handleLikes}\n                />\n            )}\n        </div>\n    )\n}\n\nexport default App","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}